version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: flowsync
      POSTGRES_PASSWORD: flowsync
      POSTGRES_DB: flowsync_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  neo4j:
    image: neo4j:5
    environment:
      NEO4J_AUTH: neo4j/password
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data

  redis:
    image: redis:7
    ports:
      - "6380:6379"

  kafka:
    image: bitnami/kafka:3.2.3
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@localhost:9093
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=1
    depends_on:
      - zookeeper

  zookeeper:
    image: bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  # Web application
  web-app:
    build:
      context: .
      dockerfile: apps/web-app/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - POSTGRES_USER=flowsync
      - POSTGRES_PASSWORD=flowsync
      - POSTGRES_DB=flowsync_dev
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - REDIS_PORT=6379
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - GITHUB_REDIRECT_URI=http://localhost:4000/auth/github/callback
      - SESSION_SECRET=${SESSION_SECRET}
      - FRONTEND_URL=http://localhost:3000
    depends_on:
      - postgres
      - redis
      - neo4j
      - kafka
      - zookeeper
    volumes:
      - ./apps/web-app:/app/apps/web-app
      - /app/node_modules
      - /app/apps/web-app/node_modules

  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: apps/api-gateway/Dockerfile
    ports:
      - "4000:4000"
    env_file:
      - ./.env
    environment:
      - NODE_ENV=development
      - POSTGRES_USER=flowsync
      - POSTGRES_PASSWORD=flowsync
      - POSTGRES_DB=flowsync_dev
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - REDIS_PORT=6379
      - GITHUB_REDIRECT_URI=http://localhost:4000/auth/github/callback
      - SESSION_SECRET=${SESSION_SECRET}
      - FRONTEND_URL=http://localhost:3000
    depends_on:
      - postgres
      - redis
      - neo4j
      - kafka
      - zookeeper
    volumes:
      - ./apps/api-gateway:/app/apps/api-gateway
      - /app/node_modules
      - /app/apps/api-gateway/node_modules

volumes:
  postgres_data:
  neo4j_data: